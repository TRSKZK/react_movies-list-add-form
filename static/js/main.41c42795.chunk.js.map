{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","isImgUrlValid","isImdbUrlValid","isTitleEntered","isImdbIdEntered","handleSubmit","event","preventDefault","props","onAdd","clearState","setState","handleInputChange","target","name","value","canSubmit","handleUrlOnBlurr","regExp","RegExp","match","this","isDesabled","action","onSubmit","htmlFor","required","placeholder","type","onChange","onBlur","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41c42795.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  isImgUrlValid: boolean,\n  isImdbUrlValid: boolean,\n  isTitleEntered: boolean,\n  isImdbIdEntered: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isImgUrlValid: false,\n    isImdbUrlValid: false,\n    isTitleEntered: false,\n    isImdbIdEntered: false,\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    this.props.onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbId,\n      imdbUrl,\n    });\n    this.clearState();\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isImgUrlValid: false,\n      isImdbUrlValid: false,\n      isTitleEntered: false,\n      isImdbIdEntered: false,\n    });\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    } as unknown as Pick<State, keyof State>);\n  };\n\n  canSubmit = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isImgUrlValid,\n      isImdbUrlValid,\n      isTitleEntered,\n      isImdbIdEntered,\n    } = this.state;\n\n    return title && imdbUrl && imdbUrl && imgUrl\n      && imdbId && !isImdbIdEntered\n      && !isImgUrlValid && !isImdbUrlValid && !isTitleEntered;\n  };\n\n  handleUrlOnBlurr = (event:React.FocusEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    const expression = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const regExp = new RegExp(expression);\n\n    switch (name) {\n      case 'imgUrl':\n        if (value.match(regExp)) {\n          this.setState({\n            isImgUrlValid: false,\n          } as Pick<State, keyof State>);\n        } else {\n          this.setState({\n            isImgUrlValid: true,\n          } as Pick<State, keyof State>);\n        }\n\n        break;\n      case 'imdbUrl':\n        if (value.match(regExp)) {\n          this.setState({\n            isImdbUrlValid: false,\n          } as Pick<State, keyof State>);\n        } else {\n          this.setState({\n            isImdbUrlValid: true,\n          } as Pick<State, keyof State>);\n        }\n\n        break;\n      case 'title':\n        if (this.state.title) {\n          this.setState({\n            isTitleEntered: false,\n          } as Pick<State, keyof State>);\n        } else {\n          this.setState({\n            isTitleEntered: true,\n          } as Pick<State, keyof State>);\n        }\n\n        break;\n      case 'imdbId':\n        if (this.state.imdbId) {\n          this.setState({\n            isImdbIdEntered: false,\n          } as Pick<State, keyof State>);\n        } else {\n          this.setState({\n            isImdbIdEntered: true,\n          } as Pick<State, keyof State>);\n        }\n\n        break;\n\n      default:\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isImgUrlValid,\n      isImdbUrlValid,\n      isTitleEntered,\n      isImdbIdEntered,\n    } = this.state;\n    const isDesabled = this.canSubmit();\n\n    return (\n      <form\n        className=\"from\"\n        name=\"form\"\n        action=\"POST\"\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"form__item\">\n          <label htmlFor=\"title\">\n            Title:\n            {' '}\n            <input\n              required\n              className={isTitleEntered ? 'input error' : 'input'}\n              name=\"title\"\n              placeholder=\"Enter title here\"\n              value={title}\n              type=\"text\"\n              onChange={this.handleInputChange}\n              onBlur={this.handleUrlOnBlurr}\n            />\n          </label>\n          <div className=\"error-message\">\n            {isTitleEntered && (<span>Please enter the title</span>)}\n          </div>\n        </div>\n\n        <div className=\"form__item\">\n          <label htmlFor=\"imgUrl\">\n            Image url:\n            {' '}\n            <input\n              required\n              className={isImgUrlValid ? 'input error' : 'input'}\n              name=\"imgUrl\"\n              type=\"text\"\n              value={imgUrl}\n              placeholder=\"Enter image url\"\n              onChange={this.handleInputChange}\n              onBlur={this.handleUrlOnBlurr}\n            />\n          </label>\n          <div className=\"error-message\">\n            {isImgUrlValid && (<span>Url is invalid</span>)}\n          </div>\n        </div>\n\n        <div className=\"form__item\">\n          <label htmlFor=\"imdbUrl\">\n            Imdb Url:\n            {' '}\n            <input\n              required\n              className={isImdbUrlValid ? 'input error' : 'input'}\n              name=\"imdbUrl\"\n              type=\"text\"\n              value={imdbUrl}\n              placeholder=\"Enter imdb url\"\n              onChange={this.handleInputChange}\n              onBlur={this.handleUrlOnBlurr}\n            />\n          </label>\n          <div className=\"error-message\">\n            {isImdbUrlValid && (<span>Url is invalid</span>)}\n          </div>\n        </div>\n\n        <div className=\"form__item\">\n          <label htmlFor=\"imdbId\">\n            Imdb Id:\n            {' '}\n            <input\n              required\n              className={isImdbIdEntered ? 'input error' : 'input'}\n              name=\"imdbId\"\n              type=\"text\"\n              value={imdbId}\n              placeholder=\"Enter imdb Id\"\n              onChange={this.handleInputChange}\n              onBlur={this.handleUrlOnBlurr}\n            />\n          </label>\n          <div className=\"error-message\">\n            {isImdbIdEntered && (<span>Enter valid Id</span>)}\n          </div>\n        </div>\n        <div className=\"form__item\">\n          <textarea\n            className=\"textarea\"\n            placeholder=\"Enter a movie description\"\n            name=\"desctiption\"\n            value={description}\n            onChange={(event) => {\n              this.setState({ description: event.target.value });\n            }}\n          />\n        </div>\n        <button\n          className=\"button\"\n          disabled={!isDesabled}\n          type=\"submit\"\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}